#If SIM is enabled, use this
metricPrefix: "Custom Metrics|CouchDB"

#If SIM is not enabled, then use this
#metricPrefix: 'Server|Component:<Component-ID>|Custom Metrics|CouchDB'

# To know your Component-ID, Please refer the link
# https://community.appdynamics.com/t5/Knowledge-Base/How-to-troubleshoot-missing-custom-metrics-or-extensions-metrics/ta-p/28695
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


# Enter your CouchDB node information below
# Enter one node from each cluster you want to monitor. The extension will automatically pull metrics from all nodes in that cluster.
servers:
  - uri: "http://couchdb.one:5984"
    username: "admin" # user should have privileges in CouchDB
    password: "admin"
    encryptedPassword: ""
    useSSL: "false"
    displayName: "myCluster"

# More servers go here
#  - uri: "https://couchdb.two:6984"
#    username: "admin"
#    password: "admin"
#    encryptedPassword: ""
#    useSSL: "false"
#    displayName: "testCluster"

#  - uri: "https://172.0.0.2:6984"
#    username: "admin"
#    password: "admin"
#    encryptedPassword: ""
#    useSSL: "false"
#    displayName: "testCluster2"
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

connection:
  socketTimeout: 5000 # Read Timeout
  connectTimeout: 5000 # Connection Timeout
  # SSL parameters are optional
  sslCertCheckEnabled: true #
  sslCipherSuites: [] # Defaults to "default".
  sslVerifyHostname: true
  sslProtocols: [] # If null, by default TLSv1, TLSv1.1, TLSv1.2 are supported.

  # Converting PEM to JKS https://docs.oracle.com/cd/E35976_01/server.740/es_admin/src/tadm_ssl_convert_pem_to_jks.html
  sslTrustStorePath: "" # If not set, will set value from "-Dappdynamics.agent.monitors.truststore.path=/path/cacerts" if present, else will set value as <MachineAgentHome>/conf/extensions-cacerts.jks.
  sslTrustStorePassword: "changeit" # If not set, will set value from "-Dappdynamics.agent.monitors.truststore.password".
  sslTrustStoreEncryptedPassword: "" ## If not set, will set value from "-Dappdynamics.agent.monitors.truststore.encryptedPassword".

# Provide the encryption key for the encrypted password
encryptionKey: ""

proxy:
  uri: ""
  username: ""
  password: ""
  encryptedPassword: ""
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Filters metrics based on node name. Node name is set in CouchDB while creating the node
# Node name can be found in the /_membership endpoint of CouchDB in "cluster_nodes" section.
# A value of [".*"] will fetch metrics from all nodes.
# [""] or [] will fetch none.
# Supports regex
nodes: [".*"]

# Each CouchDB server in the "servers" section above, needs some number of threads = 1 + (total number of nodes in that cluster),
# so add up the number nodes in each clusters you are monitoring.

# -------------------------
# Example: if couchdb.one has 3 nodes and couchdb.two has 1 node,
# numberOfThreads = numberOfThreads for couchdb.one + numberOfThreads for couchdb.two
# numberOfThreads = (3) + (1) = 4
#-------------------------------
numberOfThreads: 4

# This section can be used to customize your metric path if needed
metricPathReplacements:
  - replace: "percent"
    replaceWith: "%"

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
customDashboard:
  enabled: true # Set to false to disable dashboard upload
  dashboardName: "CouchDB Monitor Dashboard"
  sslCertCheckEnabled: true
  # Update the path to the dashboard file.
  pathToSIMDashboard: "monitors/CouchDBMonitor/CouchDB+Dashboard.json"
  pathToNormalDashboard:
  periodicDashboardCheckInSeconds: 300

# If any of the following fields are not set, the values of the specific fields are set from the system properties
# of the corresponding fields as specified in the comments.
# If the system properties are not set for the field, then the data is retrieved from machine agent controller-info.xml.
controllerInfo:
  controllerHost: "" # -Dappdynamics.controller.hostName
  controllerPort: 8090 # -Dappdynamics.controller.port
  controllerSslEnabled: false # -Dappdynamics.controller.ssl.enabled
  enableOrchestration: false # N/A
  uniqueHostId: "" # -Dappdynamics.agent.uniqueHostId
  username: "" # -Dappdynamics.agent.monitors.controller.username
  password: "" # -Dappdynamics.agent.monitors.controller.password
  encryptedPassword: "" # -Dappdynamics.agent.monitors.controller.encryptedPassword
  accountAccessKey: "" # -Dappdynamics.agent.accountAccessKey
  account: "" # -Dappdynamics.agent.accountName
  machinePath: "" # -Dappdynamics.machine.agent.hierarchyPath
  simEnabled: false # -Dappdynamics.sim.enabled
  applicationName: "" # -Dappdynamics.agent.applicationName
  tierName: "" # -Dappdynamics.agent.tierName
  nodeName: "" # -Dappdynamics.agent.nodeName

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

enableHealthChecks: true # If not set, will be retrieved from "-Dappdynamics.agent.monitors.healthchecks.enable=true". Defaults to true.